graphs:

- id: Motor
  nodes:
  - id: sub
    module: timeflux.nodes.zmq
    class: Sub
    params:
      topics: [ filtered, events ]
  - id: epoch
    module: timeflux.nodes.epoch
    class: Samples
    params:
      trigger: trial_begins
      length: 0.9
  - id: window
    module: timeflux.nodes.window
    class: Slide
    params:
      length: 0.9
      step: 0.1
  - id: classification
    module: timeflux.nodes.ml
    class: Pipeline
    params:
      mode: predict_proba
      meta_label: [ epoch, context, id ]
      event_start_accumulation: motor-training_begins
      event_stop_accumulation: motor-training_ends
      event_start_training: motor-training_ends
      steps:
        - module: timeflux.estimators.transformers.shape
          class: Transpose
          args:
            axes: [ 0, 2, 1 ]
        - module: pyriemann.estimation
          class: Covariances
          args:
            estimator: oas
        - module: pyriemann.tangentspace
          class: TangentSpace
          args:
            metric: riemann
        - module: sklearn.linear_model
          class: LogisticRegression
          args:
            penalty: elasticnet
            l1_ratio: 0.15
            intercept_scaling: 1000.0
            solver: saga
  - id: predict
    module: nodes.asap
    class: Accumulate
    params:
      threshold: 3 # For two classes, equivalent to 75% confidence
      recovery: 15 # For a 100ms window, equivalent to 1.5s recovery between two predictions
      source: motor
  - id: pub
    module: timeflux.nodes.zmq
    class: Pub
    params:
      topic: model
  # - id: display
  #   module: timeflux.nodes.debug
  #   class: Display
  edges:
    - source: sub:filtered
      target: epoch
    - source: sub:filtered
      target: window
    - source: sub:events
      target: epoch:events
    - source: sub:events
      target: classification:events
    - source: epoch:*
      target: classification:training
    - source: window:*
      target: classification
    - source: classification:events
      target: predict:model
    - source: predict
      target: pub
    # - source: predict
    #   target: display
  rate: 10

- id: Blink
  nodes:
  - id: sub
    module: timeflux.nodes.zmq
    class: Sub
    params:
      topics: [ filtered, events ]
  - id: epoch
    module: timeflux.nodes.epoch
    class: Samples
    params:
      trigger: stim
      length: 0.5
  - id: window
    module: timeflux.nodes.window
    class: Slide
    params:
      length: 0.5
      step: 0.1
  - id: classification
    module: timeflux.nodes.ml
    class: Pipeline
    params:
      mode: predict_proba
      meta_label: [ epoch, context, status ]
      event_start_accumulation: blink-training_begins
      event_stop_accumulation: blink-training_ends
      event_start_training: blink-training_ends
      steps:
        - module: timeflux.estimators.transformers.shape
          class: Transpose
          args:
            axes: [ 0, 2, 1 ]
        - module: pyriemann.estimation
          class: ERPCovariances
          args:
            estimator: oas
        - module: pyriemann.classification
          class: TSclassifier
          args:
            metric: riemann
            tsupdate: false
  - id: predict
    module: nodes.predict
    class: Accumulate
    params:
      buffer_size: 10
      threshold: 2
      source: blink
  - id: pub
    module: timeflux.nodes.zmq
    class: Pub
    params:
      topic: model
  # - id: display
  #   module: timeflux.nodes.debug
  #   class: Display
  edges:
    - source: sub:filtered
      target: epoch
    - source: sub:filtered
      target: window
    - source: sub:events
      target: epoch:events
    - source: sub:events
      target: classification:events
    - source: epoch:*
      target: classification:training
    - source: window:*
      target: classification
    - source: classification:events
      target: predict:model
    - source: predict
      target: pub
    # - source: predict
    #   target: display
  rate: 10